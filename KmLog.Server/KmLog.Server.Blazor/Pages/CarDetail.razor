@page "/car/{licensePlate}"
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@attribute [Authorize]

<h2>@LicensePlate</h2>

<AddEntryComponent LicensePlate="@LicensePlate" />

@if (PagingResult != null && PagingResult.Count > 0)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Date</th>
                <th scope="col">Amount</th>
                <th scope="col">Cost</th>
                <th scope="col">Distance</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var refuelEntry in PagingResult.Items)
            {
                <tr>
                    <th scope="row">@refuelEntry.Date.ToShortDateString()</th>
                    <td>@refuelEntry.Amount.ToString("N2") l</td>
                    <td>@refuelEntry.Cost.ToString("N2") €</td>
                    <td>@refuelEntry.Distance.ToString("N0") km</td>
                </tr>
            }
        </tbody>
    </table>
    <PaginatorComponent PagingParams="@PagingParams" PagingResult="@PagingResult" OnPagingChanged="@PagingChanged" />
}

@code {
    [CascadingParameter]
    Task<AuthenticationState> AuthenticationStateTask { get; set; }

    [Parameter]
    public string LicensePlate { get; set; }

    PagingParameters PagingParams { get; set; } = new PagingParameters { PageIndex = 0, PageSize = 10 };
    PagingResult<RefuelEntryInfoDto> PagingResult { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        if (!authState.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo($"api/authentication/signin?redirectUri=/car/{LicensePlate}", true);
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        PagingResult = await HttpClient.GetJsonAsync<PagingResult<RefuelEntryInfoDto>>($"api/refuelentry/{LicensePlate}");
    }

    async Task PagingChanged(int page)
    {
        PagingParams.PageIndex = page;
        PagingResult = await HttpClient.GetJsonAsync<PagingResult<RefuelEntryInfoDto>>(
            $"api/refuelentry/{LicensePlate}?PageIndex={PagingParams.PageIndex}&PageSize={PagingParams.PageSize}");
    }
}